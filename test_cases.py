from process_dialation import predict_dialated_rf_n_loop_bound

print("----->CASE 1")
code = '''
    for(k=0;k<5;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
# print("Mem Trace:  ['retval', 'alpha', 'k', '[2', 'k', 'alpha', 'k', 'arrayidx1', 'k', 'arrayidx4', 'alpha', 'k', 'arrayidx1', 'k', 'k', ']', 'k']")
print()
# base cases input rf collected from dynamic rd calculator
dict2 = {0:5, 1:9, 2:5, -1:7}
dict3 = {0:7, 1:13, 2:8, -1:9}
dict4 = {0:9, 1:17, 2:11, -1:11}
print("Predicted for k = 5")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 4)
print(predicted_rf)
print()
print("Actual for k = 5")
actual_rf = {0: 11, 1: 21, 2: 14, -1: 13}
print(actual_rf)
print()

if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")


print("\n----->CASE 2\n")
code = '''
    for(k=0;k<300;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
print("Predicted for k = 300")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for k = 300")
actual_rf = {0: 601, 1: 1201, 2: 899, -1: 603}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")



print("\n----->CASE 2\n")
code = '''
    for(k=0;k<300;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
print("Predicted for k = 300")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for k = 300")
actual_rf = {0: 601, 1: 1201, 2: 899, -1: 603}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")


print("\n----->CASE 3\n")
code = '''
    for(j=0;j<2;j++){
        for(k=0;k<300;k++) {
            A[0][k] = alpha * A[0][k];
            B[j][k] = alpha;
        }
    }
}'''
print(code)
print("Predicted for j = 2, k = 300")
# base cases input rf collected from dynamic rd calculator
dict2 = {0:15, 1:17, 2:7, 3:9, 4:2, 6:2, -1:10} # j = 2, k = 2
dict3 = {0:19, 1:25, 2:9, 3:13, 4:4, 8:3, -1:13} # j = 2, k = 3
dict4 = {0:23, 1:33, 2:11, 3:17, 4:6, 10:4, -1:16} # j = 2, k = 4
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for j = 2, k = 300")
actual_rf = {0:1207, 1:2401, 2:603, 3:1201, 4:598, 602:300, -1:904} # j = 2, k = 300
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")




print("\n----->CASE 4\n")
code = '''
    for(j=0;j<200;j++){
        for(k=0;k<300;k++) {
            A[0][k] = alpha * A[0][k];
            B[j][k] = alpha;
        }
    }
}'''
print(code)
print("Predicted for j = 200, k = 300")
# base cases input rf collected from dynamic rd calculator
dict_2_300 = {0:1207, 1:2401, 2:603, 3:1201, 4:598, 602:300, -1:904} # j = 2, k = 300
dict_3_300 = {0:1810, 1:3602, 2:904, 3:1802, 4:897, 602:600, -1:1204} # j = 3, k = 300
dict_4_300 = {0:2413, 1:4803, 2:1295, 3:2403, 4:1196, 602:900, -1:1504} # j = 4, k = 300
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_300, dict_3_300, dict_4_300, 199)
print(predicted_rf)
print("")
print("Actual for j = 200, k = 300")
actual_rf = {0:120601, 1:240199, 2:60201, 3:120199, 4:59800, 602:59700, -1:60304} # j = 2, k = 300
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")



print("\n----->CASE 5\n")
code = '''
    for(i=0;i<300;i++){
        for(j=0;j<200;j++){
            for(k=0;k<102;k++) {
                A[i][k] = alpha * A[i][k];
                B[j][k] = alpha;
            }
        }
    }
}'''
print(code)
print("Predicted for j = 300, j = 200, k = 102")
# base cases input rf collected from dynamic rd calculator
dict_2_200_102 = {0: 82807, 1: 41199, 2: 163601, 3: 122401, 4: 401, 5: 81200, 207: 40596, 20505: 1, 20506: 2, 20507: 2, 20508: 2, 20509: 2, 20510: 2, 20511: 2, 20512: 2, 20513: 2, 20514: 2, 20515: 2, 20516: 2, 20517: 2, 20518: 2, 20519: 2, 20520: 2, 20521: 2, 20522: 2, 20523: 2, 20524: 2, 20525: 2, 20526: 2, 20527: 2, 20528: 2, 20529: 2, 20530: 2, 20531: 2, 20532: 2, 20533: 2, 20534: 2, 20535: 2, 20536: 2, 20537: 2, 20538: 2, 20539: 2, 20540: 2, 20541: 2, 20542: 2, 20543: 2, 20544: 2, 20545: 2, 20546: 2, 20547: 2, 20548: 2, 20549: 2, 20550: 2, 20551: 2, 20552: 2, 20553: 2, 20554: 2, 20555: 2, 20556: 2, 20557: 2, 20558: 2, 20559: 2, 20560: 2, 20561: 2, 20562: 2, 20563: 2, 20564: 2, 20565: 2, 20566: 2, 20567: 2, 20568: 2, 20569: 2, 20570: 2, 20571: 2, 20572: 2, 20573: 2, 20574: 2, 20575: 2, 20576: 2, 20577: 2, 20578: 2, 20579: 2, 20580: 2, 20581: 2, 20582: 2, 20583: 2, 20584: 2, 20585: 2, 20586: 2, 20587: 2, 20588: 2, 20589: 2, 20590: 2, 20591: 2, 20592: 2, 20593: 2, 20594: 2, 20595: 2, 20596: 2, 20597: 2, 20598: 2, 20599: 2, 20600: 2, 20601: 2, 20602: 2, 20603: 2, 20604: 2, 20605: 2, 20606: 2, 20607: 20197, -1: 20609}
dict_3_200_102 = {0: 124210, 1: 61799, 2: 245402, 3: 183601, 4: 602, 5: 121800, 207: 60894, 20505: 2, 20506: 4, 20507: 4, 20508: 4, 20509: 4, 20510: 4, 20511: 4, 20512: 4, 20513: 4, 20514: 4, 20515: 4, 20516: 4, 20517: 4, 20518: 4, 20519: 4, 20520: 4, 20521: 4, 20522: 4, 20523: 4, 20524: 4, 20525: 4, 20526: 4, 20527: 4, 20528: 4, 20529: 4, 20530: 4, 20531: 4, 20532: 4, 20533: 4, 20534: 4, 20535: 4, 20536: 4, 20537: 4, 20538: 4, 20539: 4, 20540: 4, 20541: 4, 20542: 4, 20543: 4, 20544: 4, 20545: 4, 20546: 4, 20547: 4, 20548: 4, 20549: 4, 20550: 4, 20551: 4, 20552: 4, 20553: 4, 20554: 4, 20555: 4, 20556: 4, 20557: 4, 20558: 4, 20559: 4, 20560: 4, 20561: 4, 20562: 4, 20563: 4, 20564: 4, 20565: 4, 20566: 4, 20567: 4, 20568: 4, 20569: 4, 20570: 4, 20571: 4, 20572: 4, 20573: 4, 20574: 4, 20575: 4, 20576: 4, 20577: 4, 20578: 4, 20579: 4, 20580: 4, 20581: 4, 20582: 4, 20583: 4, 20584: 4, 20585: 4, 20586: 4, 20587: 4, 20588: 4, 20589: 4, 20590: 4, 20591: 4, 20592: 4, 20593: 4, 20594: 4, 20595: 4, 20596: 4, 20597: 4, 20598: 4, 20599: 4, 20600: 4, 20601: 4, 20602: 4, 20603: 4, 20604: 4, 20605: 4, 20606: 4, 20607: 40394, -1: 20711}
dict_4_200_102 = {0: 165613, 1: 82399, 2: 327203, 3: 244801, 4: 803, 5: 162400, 207: 81192, 20505: 3, 20506: 6, 20507: 6, 20508: 6, 20509: 6, 20510: 6, 20511: 6, 20512: 6, 20513: 6, 20514: 6, 20515: 6, 20516: 6, 20517: 6, 20518: 6, 20519: 6, 20520: 6, 20521: 6, 20522: 6, 20523: 6, 20524: 6, 20525: 6, 20526: 6, 20527: 6, 20528: 6, 20529: 6, 20530: 6, 20531: 6, 20532: 6, 20533: 6, 20534: 6, 20535: 6, 20536: 6, 20537: 6, 20538: 6, 20539: 6, 20540: 6, 20541: 6, 20542: 6, 20543: 6, 20544: 6, 20545: 6, 20546: 6, 20547: 6, 20548: 6, 20549: 6, 20550: 6, 20551: 6, 20552: 6, 20553: 6, 20554: 6, 20555: 6, 20556: 6, 20557: 6, 20558: 6, 20559: 6, 20560: 6, 20561: 6, 20562: 6, 20563: 6, 20564: 6, 20565: 6, 20566: 6, 20567: 6, 20568: 6, 20569: 6, 20570: 6, 20571: 6, 20572: 6, 20573: 6, 20574: 6, 20575: 6, 20576: 6, 20577: 6, 20578: 6, 20579: 6, 20580: 6, 20581: 6, 20582: 6, 20583: 6, 20584: 6, 20585: 6, 20586: 6, 20587: 6, 20588: 6, 20589: 6, 20590: 6, 20591: 6, 20592: 6, 20593: 6, 20594: 6, 20595: 6, 20596: 6, 20597: 6, 20598: 6, 20599: 6, 20600: 6, 20601: 6, 20602: 6, 20603: 6, 20604: 6, 20605: 6, 20606: 6, 20607: 60591, -1: 20813}
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_200_102, dict_3_200_102, dict_4_200_102, 299)
print(predicted_rf)
print("")
print("")
print("Actual for i = 300, j = 200, k = 102")
actual_rf = {0: 12420901, 1: 6179999, 2: 24540299, 3: 18360001, 4: 60299, 5: 12180000, 207: 6089400, 20505: 299, 20506: 598, 20507: 598, 20508: 598, 20509: 598, 20510: 598, 20511: 598, 20512: 598, 20513: 598, 20514: 598, 20515: 598, 20516: 598, 20517: 598, 20518: 598, 20519: 598, 20520: 598, 20521: 598, 20522: 598, 20523: 598, 20524: 598, 20525: 598, 20526: 598, 20527: 598, 20528: 598, 20529: 598, 20530: 598, 20531: 598, 20532: 598, 20533: 598, 20534: 598, 20535: 598, 20536: 598, 20537: 598, 20538: 598, 20539: 598, 20540: 598, 20541: 598, 20542: 598, 20543: 598, 20544: 598, 20545: 598, 20546: 598, 20547: 598, 20548: 598, 20549: 598, 20550: 598, 20551: 598, 20552: 598, 20553: 598, 20554: 598, 20555: 598, 20556: 598, 20557: 598, 20558: 598, 20559: 598, 20560: 598, 20561: 598, 20562: 598, 20563: 598, 20564: 598, 20565: 598, 20566: 598, 20567: 598, 20568: 598, 20569: 598, 20570: 598, 20571: 598, 20572: 598, 20573: 598, 20574: 598, 20575: 598, 20576: 598, 20577: 598, 20578: 598, 20579: 598, 20580: 598, 20581: 598, 20582: 598, 20583: 598, 20584: 598, 20585: 598, 20586: 598, 20587: 598, 20588: 598, 20589: 598, 20590: 598, 20591: 598, 20592: 598, 20593: 598, 20594: 598, 20595: 598, 20596: 598, 20597: 598, 20598: 598, 20599: 598, 20600: 598, 20601: 598, 20602: 598, 20603: 598, 20604: 598, 20605: 598, 20606: 598, 20607: 6038903, -1: 51005} 
# i = 300, j = 200, k = 102
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")