from process_dialation import predict_dialated_rf_n_loop_bound

print("----->CASE 1")
code = '''
    for(k=0;k<5;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
# print("Mem Trace:  ['retval', 'alpha', 'k', '[2', 'k', 'alpha', 'k', 'arrayidx1', 'k', 'arrayidx4', 'alpha', 'k', 'arrayidx1', 'k', 'k', ']', 'k']")
print()
# base cases input rf collected from dynamic rd calculator
dict2 = {0:5, 1:9, 2:5, -1:7}
dict3 = {0:7, 1:13, 2:8, -1:9}
dict4 = {0:9, 1:17, 2:11, -1:11}
print("Predicted for k = 5")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 4)
print(predicted_rf)
print()
print("Actual for k = 5")
actual_rf = {0: 11, 1: 21, 2: 14, -1: 13}
print(actual_rf)
print()

if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")


print("\n----->CASE 2\n")
code = '''
    for(k=0;k<300;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
print("Predicted for k = 300")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for k = 300")
actual_rf = {0: 601, 1: 1201, 2: 899, -1: 603}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")



print("\n----->CASE 2\n")
code = '''
    for(k=0;k<300;k++) {
        A[0][k] = alpha * A[0][k];
        B[0][k] = alpha;
    }
}'''
print(code)
print("Predicted for k = 300")
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for k = 300")
actual_rf = {0: 601, 1: 1201, 2: 899, -1: 603}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")


print("\n----->CASE 3\n")
code = '''
    for(j=0;j<2;j++){
        for(k=0;k<300;k++) {
            A[0][k] = alpha * A[0][k];
            B[j][k] = alpha;
        }
    }
}'''
print(code)
print("Predicted for j = 2, k = 300")
# base cases input rf collected from dynamic rd calculator
dict2 = {0:15, 1:17, 2:7, 3:9, 4:2, 6:2, -1:10} # j = 2, k = 2
dict3 = {0:19, 1:25, 2:9, 3:13, 4:4, 8:3, -1:13} # j = 2, k = 3
dict4 = {0:23, 1:33, 2:11, 3:17, 4:6, 10:4, -1:16} # j = 2, k = 4
predicted_rf = predict_dialated_rf_n_loop_bound(dict2, dict3, dict4, 299)
print(predicted_rf)
print("Actual for j = 2, k = 300")
actual_rf = {0:1207, 1:2401, 2:603, 3:1201, 4:598, 602:300, -1:904} # j = 2, k = 300
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")




print("\n----->CASE 4\n")
code = '''
    for(j=0;j<200;j++){
        for(k=0;k<300;k++) {
            A[0][k] = alpha * A[0][k];
            B[j][k] = alpha;
        }
    }
}'''
print(code)
print("Predicted for j = 200, k = 300")
# base cases input rf collected from dynamic rd calculator
dict_2_300 = {0:1207, 1:2401, 2:603, 3:1201, 4:598, 602:300, -1:904} # j = 2, k = 300
dict_3_300 = {0:1810, 1:3602, 2:904, 3:1802, 4:897, 602:600, -1:1204} # j = 3, k = 300
dict_4_300 = {0:2413, 1:4803, 2:1295, 3:2403, 4:1196, 602:900, -1:1504} # j = 4, k = 300
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_300, dict_3_300, dict_4_300, 199)
print(predicted_rf)
print("")
print("Actual for j = 200, k = 300")
actual_rf = {0:120601, 1:240199, 2:60201, 3:120199, 4:59800, 602:59700, -1:60304} # j = 2, k = 300
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")



print("\n----->CASE 5\n")
code = '''
    for(i=0;i<300;i++){
        for(j=0;j<200;j++){
            for(k=0;k<102;k++) {
                A[i][k] = alpha * A[i][k];
                B[j][k] = alpha;
            }
        }
    }
}'''
print(code)
print("Predicted for i = 300, j = 200, k = 102")
# base cases input rf collected from dynamic rd calculator
dict_2_200_102 = {0: 82807, 1: 41199, 2: 163601, 3: 122401, 4: 401, 5: 81200, 207: 40596, 20505: 1, 20506: 2, 20507: 2, 20508: 2, 20509: 2, 20510: 2, 20511: 2, 20512: 2, 20513: 2, 20514: 2, 20515: 2, 20516: 2, 20517: 2, 20518: 2, 20519: 2, 20520: 2, 20521: 2, 20522: 2, 20523: 2, 20524: 2, 20525: 2, 20526: 2, 20527: 2, 20528: 2, 20529: 2, 20530: 2, 20531: 2, 20532: 2, 20533: 2, 20534: 2, 20535: 2, 20536: 2, 20537: 2, 20538: 2, 20539: 2, 20540: 2, 20541: 2, 20542: 2, 20543: 2, 20544: 2, 20545: 2, 20546: 2, 20547: 2, 20548: 2, 20549: 2, 20550: 2, 20551: 2, 20552: 2, 20553: 2, 20554: 2, 20555: 2, 20556: 2, 20557: 2, 20558: 2, 20559: 2, 20560: 2, 20561: 2, 20562: 2, 20563: 2, 20564: 2, 20565: 2, 20566: 2, 20567: 2, 20568: 2, 20569: 2, 20570: 2, 20571: 2, 20572: 2, 20573: 2, 20574: 2, 20575: 2, 20576: 2, 20577: 2, 20578: 2, 20579: 2, 20580: 2, 20581: 2, 20582: 2, 20583: 2, 20584: 2, 20585: 2, 20586: 2, 20587: 2, 20588: 2, 20589: 2, 20590: 2, 20591: 2, 20592: 2, 20593: 2, 20594: 2, 20595: 2, 20596: 2, 20597: 2, 20598: 2, 20599: 2, 20600: 2, 20601: 2, 20602: 2, 20603: 2, 20604: 2, 20605: 2, 20606: 2, 20607: 20197, -1: 20609}
dict_3_200_102 = {0: 124210, 1: 61799, 2: 245402, 3: 183601, 4: 602, 5: 121800, 207: 60894, 20505: 2, 20506: 4, 20507: 4, 20508: 4, 20509: 4, 20510: 4, 20511: 4, 20512: 4, 20513: 4, 20514: 4, 20515: 4, 20516: 4, 20517: 4, 20518: 4, 20519: 4, 20520: 4, 20521: 4, 20522: 4, 20523: 4, 20524: 4, 20525: 4, 20526: 4, 20527: 4, 20528: 4, 20529: 4, 20530: 4, 20531: 4, 20532: 4, 20533: 4, 20534: 4, 20535: 4, 20536: 4, 20537: 4, 20538: 4, 20539: 4, 20540: 4, 20541: 4, 20542: 4, 20543: 4, 20544: 4, 20545: 4, 20546: 4, 20547: 4, 20548: 4, 20549: 4, 20550: 4, 20551: 4, 20552: 4, 20553: 4, 20554: 4, 20555: 4, 20556: 4, 20557: 4, 20558: 4, 20559: 4, 20560: 4, 20561: 4, 20562: 4, 20563: 4, 20564: 4, 20565: 4, 20566: 4, 20567: 4, 20568: 4, 20569: 4, 20570: 4, 20571: 4, 20572: 4, 20573: 4, 20574: 4, 20575: 4, 20576: 4, 20577: 4, 20578: 4, 20579: 4, 20580: 4, 20581: 4, 20582: 4, 20583: 4, 20584: 4, 20585: 4, 20586: 4, 20587: 4, 20588: 4, 20589: 4, 20590: 4, 20591: 4, 20592: 4, 20593: 4, 20594: 4, 20595: 4, 20596: 4, 20597: 4, 20598: 4, 20599: 4, 20600: 4, 20601: 4, 20602: 4, 20603: 4, 20604: 4, 20605: 4, 20606: 4, 20607: 40394, -1: 20711}
dict_4_200_102 = {0: 165613, 1: 82399, 2: 327203, 3: 244801, 4: 803, 5: 162400, 207: 81192, 20505: 3, 20506: 6, 20507: 6, 20508: 6, 20509: 6, 20510: 6, 20511: 6, 20512: 6, 20513: 6, 20514: 6, 20515: 6, 20516: 6, 20517: 6, 20518: 6, 20519: 6, 20520: 6, 20521: 6, 20522: 6, 20523: 6, 20524: 6, 20525: 6, 20526: 6, 20527: 6, 20528: 6, 20529: 6, 20530: 6, 20531: 6, 20532: 6, 20533: 6, 20534: 6, 20535: 6, 20536: 6, 20537: 6, 20538: 6, 20539: 6, 20540: 6, 20541: 6, 20542: 6, 20543: 6, 20544: 6, 20545: 6, 20546: 6, 20547: 6, 20548: 6, 20549: 6, 20550: 6, 20551: 6, 20552: 6, 20553: 6, 20554: 6, 20555: 6, 20556: 6, 20557: 6, 20558: 6, 20559: 6, 20560: 6, 20561: 6, 20562: 6, 20563: 6, 20564: 6, 20565: 6, 20566: 6, 20567: 6, 20568: 6, 20569: 6, 20570: 6, 20571: 6, 20572: 6, 20573: 6, 20574: 6, 20575: 6, 20576: 6, 20577: 6, 20578: 6, 20579: 6, 20580: 6, 20581: 6, 20582: 6, 20583: 6, 20584: 6, 20585: 6, 20586: 6, 20587: 6, 20588: 6, 20589: 6, 20590: 6, 20591: 6, 20592: 6, 20593: 6, 20594: 6, 20595: 6, 20596: 6, 20597: 6, 20598: 6, 20599: 6, 20600: 6, 20601: 6, 20602: 6, 20603: 6, 20604: 6, 20605: 6, 20606: 6, 20607: 60591, -1: 20813}
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_200_102, dict_3_200_102, dict_4_200_102, 299)
print(predicted_rf)
print("")
print("")
print("Actual for i = 300, j = 200, k = 102")
actual_rf = {0: 12420901, 1: 6179999, 2: 24540299, 3: 18360001, 4: 60299, 5: 12180000, 207: 6089400, 20505: 299, 20506: 598, 20507: 598, 20508: 598, 20509: 598, 20510: 598, 20511: 598, 20512: 598, 20513: 598, 20514: 598, 20515: 598, 20516: 598, 20517: 598, 20518: 598, 20519: 598, 20520: 598, 20521: 598, 20522: 598, 20523: 598, 20524: 598, 20525: 598, 20526: 598, 20527: 598, 20528: 598, 20529: 598, 20530: 598, 20531: 598, 20532: 598, 20533: 598, 20534: 598, 20535: 598, 20536: 598, 20537: 598, 20538: 598, 20539: 598, 20540: 598, 20541: 598, 20542: 598, 20543: 598, 20544: 598, 20545: 598, 20546: 598, 20547: 598, 20548: 598, 20549: 598, 20550: 598, 20551: 598, 20552: 598, 20553: 598, 20554: 598, 20555: 598, 20556: 598, 20557: 598, 20558: 598, 20559: 598, 20560: 598, 20561: 598, 20562: 598, 20563: 598, 20564: 598, 20565: 598, 20566: 598, 20567: 598, 20568: 598, 20569: 598, 20570: 598, 20571: 598, 20572: 598, 20573: 598, 20574: 598, 20575: 598, 20576: 598, 20577: 598, 20578: 598, 20579: 598, 20580: 598, 20581: 598, 20582: 598, 20583: 598, 20584: 598, 20585: 598, 20586: 598, 20587: 598, 20588: 598, 20589: 598, 20590: 598, 20591: 598, 20592: 598, 20593: 598, 20594: 598, 20595: 598, 20596: 598, 20597: 598, 20598: 598, 20599: 598, 20600: 598, 20601: 598, 20602: 598, 20603: 598, 20604: 598, 20605: 598, 20606: 598, 20607: 6038903, -1: 51005} 
# i = 300, j = 200, k = 102
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")




print("\n----->CASE 6\n")
print("\n----->STANDARD DIALATION PROBLEM\n")
code = '''
    for(i=0;i<2;i++){
        for(j=0;j<2,3...200;j++){
            for(k=0;k<102;k++) {
                A[i][k] = alpha * A[i][k];
                B[j][k] = alpha;
            }
        }
    }
}'''
print(code)
print("Predicted for i = 2, j = 200, k = 102")
# base cases input rf collected from dynamic rd calculator
dict_2_2_102 = {0: 835, 1: 411, 2: 1637, 3: 1225, 4: 5, 5: 812, 207: 204, 309: 1, 310: 2, 311: 2, 312: 2, 313: 2, 314: 2, 315: 2, 316: 2, 317: 2, 318: 2, 319: 2, 320: 2, 321: 2, 322: 2, 323: 2, 324: 2, 325: 2, 326: 2, 327: 2, 328: 2, 329: 2, 330: 2, 331: 2, 332: 2, 333: 2, 334: 2, 335: 2, 336: 2, 337: 2, 338: 2, 339: 2, 340: 2, 341: 2, 342: 2, 343: 2, 344: 2, 345: 2, 346: 2, 347: 2, 348: 2, 349: 2, 350: 2, 351: 2, 352: 2, 353: 2, 354: 2, 355: 2, 356: 2, 357: 2, 358: 2, 359: 2, 360: 2, 361: 2, 362: 2, 363: 2, 364: 2, 365: 2, 366: 2, 367: 2, 368: 2, 369: 2, 370: 2, 371: 2, 372: 2, 373: 2, 374: 2, 375: 2, 376: 2, 377: 2, 378: 2, 379: 2, 380: 2, 381: 2, 382: 2, 383: 2, 384: 2, 385: 2, 386: 2, 387: 2, 388: 2, 389: 2, 390: 2, 391: 2, 392: 2, 393: 2, 394: 2, 395: 2, 396: 2, 397: 2, 398: 2, 399: 2, 400: 2, 401: 2, 402: 2, 403: 2, 404: 2, 405: 2, 406: 2, 407: 2, 408: 2, 409: 2, 410: 2, 411: 1, -1: 413}
dict_2_3_102 = {0: 1249, 1: 617, 2: 2455, 3: 1837, 4: 7, 5: 1218, 207: 408, 411: 1, 412: 2, 413: 2, 414: 2, 415: 2, 416: 2, 417: 2, 418: 2, 419: 2, 420: 2, 421: 2, 422: 2, 423: 2, 424: 2, 425: 2, 426: 2, 427: 2, 428: 2, 429: 2, 430: 2, 431: 2, 432: 2, 433: 2, 434: 2, 435: 2, 436: 2, 437: 2, 438: 2, 439: 2, 440: 2, 441: 2, 442: 2, 443: 2, 444: 2, 445: 2, 446: 2, 447: 2, 448: 2, 449: 2, 450: 2, 451: 2, 452: 2, 453: 2, 454: 2, 455: 2, 456: 2, 457: 2, 458: 2, 459: 2, 460: 2, 461: 2, 462: 2, 463: 2, 464: 2, 465: 2, 466: 2, 467: 2, 468: 2, 469: 2, 470: 2, 471: 2, 472: 2, 473: 2, 474: 2, 475: 2, 476: 2, 477: 2, 478: 2, 479: 2, 480: 2, 481: 2, 482: 2, 483: 2, 484: 2, 485: 2, 486: 2, 487: 2, 488: 2, 489: 2, 490: 2, 491: 2, 492: 2, 493: 2, 494: 2, 495: 2, 496: 2, 497: 2, 498: 2, 499: 2, 500: 2, 501: 2, 502: 2, 503: 2, 504: 2, 505: 2, 506: 2, 507: 2, 508: 2, 509: 2, 510: 2, 511: 2, 512: 2, 513: 103, -1: 515}
dict_2_4_102 = {0: 1663, 1: 823, 2: 3273, 3: 2449, 4: 9, 5: 1624, 207: 612, 513: 1, 514: 2, 515: 2, 516: 2, 517: 2, 518: 2, 519: 2, 520: 2, 521: 2, 522: 2, 523: 2, 524: 2, 525: 2, 526: 2, 527: 2, 528: 2, 529: 2, 530: 2, 531: 2, 532: 2, 533: 2, 534: 2, 535: 2, 536: 2, 537: 2, 538: 2, 539: 2, 540: 2, 541: 2, 542: 2, 543: 2, 544: 2, 545: 2, 546: 2, 547: 2, 548: 2, 549: 2, 550: 2, 551: 2, 552: 2, 553: 2, 554: 2, 555: 2, 556: 2, 557: 2, 558: 2, 559: 2, 560: 2, 561: 2, 562: 2, 563: 2, 564: 2, 565: 2, 566: 2, 567: 2, 568: 2, 569: 2, 570: 2, 571: 2, 572: 2, 573: 2, 574: 2, 575: 2, 576: 2, 577: 2, 578: 2, 579: 2, 580: 2, 581: 2, 582: 2, 583: 2, 584: 2, 585: 2, 586: 2, 587: 2, 588: 2, 589: 2, 590: 2, 591: 2, 592: 2, 593: 2, 594: 2, 595: 2, 596: 2, 597: 2, 598: 2, 599: 2, 600: 2, 601: 2, 602: 2, 603: 2, 604: 2, 605: 2, 606: 2, 607: 2, 608: 2, 609: 2, 610: 2, 611: 2, 612: 2, 613: 2, 614: 2, 615: 205, -1: 617}
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_2_102, dict_2_3_102, dict_2_4_102, 199)
print(predicted_rf)
print("")
print("")
print("Actual for i = 2, j = 200, k = 102")
actual_rf = {0: 82807, 1: 41199, 2: 163601, 3: 122401, 4: 401, 5: 81200, 207: 40596, 20505: 1, 20506: 2, 20507: 2, 20508: 2, 20509: 2, 20510: 2, 20511: 2, 20512: 2, 20513: 2, 20514: 2, 20515: 2, 20516: 2, 20517: 2, 20518: 2, 20519: 2, 20520: 2, 20521: 2, 20522: 2, 20523: 2, 20524: 2, 20525: 2, 20526: 2, 20527: 2, 20528: 2, 20529: 2, 20530: 2, 20531: 2, 20532: 2, 20533: 2, 20534: 2, 20535: 2, 20536: 2, 20537: 2, 20538: 2, 20539: 2, 20540: 2, 20541: 2, 20542: 2, 20543: 2, 20544: 2, 20545: 2, 20546: 2, 20547: 2, 20548: 2, 20549: 2, 20550: 2, 20551: 2, 20552: 2, 20553: 2, 20554: 2, 20555: 2, 20556: 2, 20557: 2, 20558: 2, 20559: 2, 20560: 2, 20561: 2, 20562: 2, 20563: 2, 20564: 2, 20565: 2, 20566: 2, 20567: 2, 20568: 2, 20569: 2, 20570: 2, 20571: 2, 20572: 2, 20573: 2, 20574: 2, 20575: 2, 20576: 2, 20577: 2, 20578: 2, 20579: 2, 20580: 2, 20581: 2, 20582: 2, 20583: 2, 20584: 2, 20585: 2, 20586: 2, 20587: 2, 20588: 2, 20589: 2, 20590: 2, 20591: 2, 20592: 2, 20593: 2, 20594: 2, 20595: 2, 20596: 2, 20597: 2, 20598: 2, 20599: 2, 20600: 2, 20601: 2, 20602: 2, 20603: 2, 20604: 2, 20605: 2, 20606: 2, 20607: 20197, -1: 20609}
# i = 300, j = 200, k = 102
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")



print("\n----->CASE 7\n")
print("\n----->Polybench: 2mm : test 1\n")
code = '''
    int i,j,k, A[1000][1000],B[1000][1000];
    int ni=1000, nk=700;

    for (i = 0; i < ni; i++)
        for (j = 0; j < nk; j++)
        A[i][j] = (i*j) / ni;
}'''
print(code)
print("Predicted for ni=1000, nk=700;")
# base cases input rf collected from dynamic rd calculator
dict_2_700 = {0: 2807, 1: 1400, 2: 4201, 3: 1407, 4: 2800, -1: 1405}
dict_3_700 = {0: 4210, 1: 2100, 2: 6301, 3: 2111, 4: 4200, -1: 2105}
dict_4_700 = {0: 5613, 1: 2800, 2: 8401, 3: 2815, 4: 5600, -1: 2805}
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_700, dict_3_700, dict_4_700, 999)
print(predicted_rf)
print("")
print("")
print("Actual for i = 1000, j = 700")
actual_rf = {0: 1403001, 1: 700000, 2: 2100001, 3: 703999, 4: 1400000, -1: 700005}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")


print("\n----->CASE 8\n")
print("\n----->Polybench: 2mm : test 2\n")
code = '''
    int i,j,k, D[6000][3000];
    int ni=6000, nl=300;

    for (i = 0; i < ni; i++)
        for (j = 0; j < nl; j++)
        D[i][j] = ((DATA_TYPE) i*(j+2)) / nk;
}'''
print(code)
print("Predicted for ni=1000, nl=300;")
# base cases input rf collected from dynamic rd calculator
dict_2_300 = {0: 1207, 1: 600, 2: 1801, 3: 605, 4: 1199, 5: 1, 304: 2, -1: 606}
dict_3_300 = {0: 1810, 1: 900, 2: 2701, 3: 908, 4: 1798, 5: 2, 304: 3, -1: 906}
dict_4_300 = {0: 2413, 1: 1200, 2: 3601, 3: 1211, 4: 2397, 5: 3, 304: 4, -1: 1206}
predicted_rf = predict_dialated_rf_n_loop_bound(dict_2_300, dict_3_300, dict_4_300, 6000-1)
print(predicted_rf)
print("")
print("")
print("Actual for i = 6000, j = 300")
actual_rf = {0: 3618001, 1: 1800000, 2: 5400001, 3: 1817999, 4: 3594001, 5: 5999, 304: 6000, -1: 1800006}
print(actual_rf)
if predicted_rf == actual_rf:
 print("\n----->TEST CASE PASSED\n")
else:
 print("\n----->TEST CASE FAILED\n")